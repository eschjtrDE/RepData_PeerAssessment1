library(knitr)
library(plyr)
library(lubridate)
library(dplyr)
opts_chunk$set(echo = TRUE, results = "markup")
data_file <- "activity.csv"
zip_file <- "activity.zip"
unzip(zipfile = zip_file)
df <- read.csv(data_file,header = TRUE)
df$new_date <- ymd(df$date)
df$new_interval <- hm(paste0(df$interval%/%100,":",df$interval%%100))
library(knitr)
library(plyr)
library(lubridate)
data_file <- "activity.csv"
zip_file <- "activity.zip"
unzip(zipfile = zip_file)
df <- read.csv(data_file,header = TRUE)
setwd("C:/Users/Eyal/Dropbox/University/Studies/MOOC/Coursera - Reproducible Research/RepData_PeerAssessment1")
unzip(zipfile = zip_file)
df <- read.csv(data_file,header = TRUE)
df$new_date <- ymd(df$date)
df$new_interval <- hm(paste0(df$interval%/%100,":",df$interval%%100))
total_steps_per_day <- ddply(df,~date,summarise,total_steps=sum(steps,na.rm = TRUE))
hist(total_steps_per_day$total_steps, xlab = "total number of steps per day",
main = "An histogram of the total number of steps taken each day", labels = TRUE)
mean_steps <- mean(total_steps_per_day$total_steps)
abline(v = mean_steps, col = "blue", lwd = 2 )
text(mean_steps-3000, 20 , paste("mean",round(mean_steps,0)), col = "blue")
median_steps <- median(total_steps_per_day$total_steps)
abline(v = median_steps, col = "red", lwd = 2)
text(median_steps+3000, 25 , paste("median",round(median_steps,0)), col = "red")
```
The mean total number of steps taken per day is 9354.23
```{r}
mean(total_steps_per_day$total_steps)
median(total_steps_per_day$total_steps)
steps_per_interval <- ddply(df,~interval,summarise,mean=mean(steps,na.rm = TRUE))
plot(steps_per_interval$interval,steps_per_interval$mean, type = "l")
max_steps <- max(steps_per_interval$mean)
max_interval <- steps_per_interval[steps_per_interval$mean == max_steps,]
max_interval$interval
sum(!complete.cases(df))
df_impute = transform(df, steps = ifelse(is.na(steps), steps_per_interval[steps_per_interval$interval == interval,]$mean, steps))
```
total_steps_per_day_impute <- ddply(df_impute,~date,summarise,total_steps=sum(steps,na.rm = TRUE))
hist(total_steps_per_day_impute$total_steps, xlab = "total number of steps per day",
main = "An histogram of the total number of steps taken each day", labels = TRUE)
mean_steps <- mean(total_steps_per_day_impute$total_steps)
abline(v = mean_steps, col = "blue", lwd = 2 )
text(mean_steps-3000, 20 , paste("mean",round(mean_steps,0)), col = "blue")
median_steps <- median(total_steps_per_day_impute$total_steps)
abline(v = median_steps, col = "red", lwd = 2)
text(median_steps+3000, 25 , paste("median",round(median_steps,0)), col = "red")
mean(total_steps_per_day_impute$total_steps)
(mean(total_steps_per_day_impute$total_steps) - mean(total_steps_per_day$total_steps)) / mean(total_steps_per_day$total_steps) * 100
median(total_steps_per_day_impute$total_steps)
(median(total_steps_per_day_impute$total_steps) - median(total_steps_per_day$total_steps)) / median(total_steps_per_day$total_steps) * 100
```
df_impute <- transform(df_impute, day_type = ifelse(wday(df_impute$new_date) %in% c(1,7), "weekend", "weekday"))
df_impute$day_type <- as.factor(df_impute$day_type)
library(dplyr)
avg_steps_by_interval_and_day_type <- df_impute %>% group_by(day_type, interval) %>% select(steps) %>%  summarise(avg_steps = mean (steps, na.rm = TRUE))
xyplot(avg_steps~interval | day_type,data=avg_steps_by_interval_and_day_type, type="l", layout=c(1,2), ylab = "mean steps number")
library(lattice)
xyplot(avg_steps~interval | day_type,data=avg_steps_by_interval_and_day_type, type="l", layout=c(1,2), ylab = "mean steps number")
