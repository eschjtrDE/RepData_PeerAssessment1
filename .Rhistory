sum(!complete.cases(df))
library(knitr)
opts_chunk$set(echo = TRUE, results = "markup")
data_file <- "activity.csv"
zip_file <- "activity.zip"
unzip(zipfile = zip_file)
df <- read.csv(data_file,header = TRUE)
df$interval_as_min = ts(df$interval%%100 + df$interval%/%100 * 60)
library(plyr)
total_steps_per_day <- ddply(df,~date,summarise,total_steps=sum(steps,na.rm = TRUE))
hist(total_steps_per_day$total_steps, xlab = "total number of steps per day",
main = "An histogram of the total number of steps taken each day", labels = TRUE)
mean_steps <- mean(total_steps_per_day$total_steps)
abline(v = mean_steps, col = "blue", lwd = 2 )
text(mean_steps-3000, 20 , paste("mean",round(mean_steps,0)), col = "blue")
median_steps <- median(total_steps_per_day$total_steps)
total_steps_per_day <- ddply(df,~date,summarise,total_steps=sum(steps,na.rm = TRUE))
df <- read.csv(data_file,header = TRUE)
setwd("C:/Users/Eyal/Dropbox/University/Studies/MOOC/Coursera - Reproducible Research/RepData_PeerAssessment1")
df <- read.csv(data_file,header = TRUE)
df$interval_as_min = ts(df$interval%%100 + df$interval%/%100 * 60)
library(plyr)
total_steps_per_day <- ddply(df,~date,summarise,total_steps=sum(steps,na.rm = TRUE))
hist(total_steps_per_day$total_steps, xlab = "total number of steps per day",
main = "An histogram of the total number of steps taken each day", labels = TRUE)
mean_steps <- mean(total_steps_per_day$total_steps)
abline(v = mean_steps, col = "blue", lwd = 2 )
text(mean_steps-3000, 20 , paste("mean",round(mean_steps,0)), col = "blue")
median_steps <- median(total_steps_per_day$total_steps)
abline(v = median_steps, col = "red", lwd = 2)
text(median_steps+3000, 25 , paste("median",round(median_steps,0)), col = "red")
mean(total_steps_per_day$total_steps)
median(total_steps_per_day$total_steps)
steps_per_interval <- ddply(df,~interval_as_min,summarise,mean=mean(steps,na.rm = TRUE))
plot(steps_per_interval$interval_as_min,steps_per_interval$mean, type = "l")
max_steps <- max(steps_per_interval$mean)
max_interval <- steps_per_interval[steps_per_interval$mean == max_steps,]
max_interva
max_interval$interval_as_min
max_interval$interval_as_min%%60 + max_interval$interval_as_min%/%60 * 100
sum(!complete.cases(df))
df_imute <- df
